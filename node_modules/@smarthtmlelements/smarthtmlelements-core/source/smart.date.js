
/* Smart HTML Elements v1.1.0 (2018-June) 
Copyright (c) 2011-2018 jQWidgets. 
License: https://htmlelements.com/license/ */

const localTimezoneOffset=-1*new Date().getTimezoneOffset(),__timeZones=[{id:"Local",offset:localTimezoneOffset,offsetHours:localTimezoneOffset/60,displayName:"",supportsDaylightSavingTime:!1},{id:"Dateline Standard Time",offset:-720,offsetHours:-12,displayName:"(UTC-12:00) International Date Line West",supportsDaylightSavingTime:!1},{id:"UTC-11",offset:-660,offsetHours:-11,displayName:"(UTC-11:00) Coordinated Universal Time-11",supportsDaylightSavingTime:!1},{id:"Hawaiteratoran Standard Time",offset:-600,offsetHours:-10,displayName:"(UTC-10:00) Hawaiterator",supportsDaylightSavingTime:!1},{id:"Alaskan Standard Time",offset:-540,offsetHours:-9,displayName:"(UTC-09:00) Alaska",supportsDaylightSavingTime:!0},{id:"Pacific Standard Time (Mexico)",offset:-480,offsetHours:-8,displayName:"(UTC-08:00) Baja California",supportsDaylightSavingTime:!0},{id:"Pacific Standard Time",offset:-480,offsetHours:-8,displayName:"(UTC-08:00) Pacific Time (US & Canada)",supportsDaylightSavingTime:!0},{id:"US Mountain Standard Time",offset:-420,offsetHours:-7,displayName:"(UTC-07:00) Arizona",supportsDaylightSavingTime:!1},{id:"Mountain Standard Time (Mexico)",offset:-420,offsetHours:-7,displayName:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",supportsDaylightSavingTime:!0},{id:"Mountain Standard Time",offset:-420,offsetHours:-7,displayName:"(UTC-07:00) Mountain Time (US & Canada)",supportsDaylightSavingTime:!0},{id:"Central Standard Time",offset:-360,offsetHours:-6,displayName:"(UTC-06:00) Central Time (US & Canada)",supportsDaylightSavingTime:!0},{id:"Central America Standard Time",offset:-360,offsetHours:-6,displayName:"(UTC-06:00) Central America",supportsDaylightSavingTime:!1},{id:"Canada Central Standard Time",offset:-360,offsetHours:-6,displayName:"(UTC-06:00) Saskatchewan",supportsDaylightSavingTime:!1},{id:"Central Standard Time (Mexico)",offset:-360,offsetHours:-6,displayName:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",supportsDaylightSavingTime:!0},{id:"SA Pacific Standard Time",offset:-300,offsetHours:-5,displayName:"(UTC-05:00) Bogota, Lima, Quito, Rio Branco",supportsDaylightSavingTime:!1},{id:"Eastern Standard Time",offset:-300,offsetHours:-5,displayName:"(UTC-05:00) Eastern Time (US & Canada)",supportsDaylightSavingTime:!0},{id:"US Eastern Standard Time",offset:-300,offsetHours:-5,displayName:"(UTC-05:00) Indiana (East)",supportsDaylightSavingTime:!0},{id:"Venezuela Standard Time",offset:-270,offsetHours:-4.5,displayName:"(UTC-04:30) Caracas",supportsDaylightSavingTime:!1},{id:"Atlantic Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Atlantic Time (Canada)",supportsDaylightSavingTime:!0},{id:"Paraguay Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Asuncion",supportsDaylightSavingTime:!0},{id:"Central Brazilian Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Cuiaba",supportsDaylightSavingTime:!0},{id:"Pacific SA Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Santiago",supportsDaylightSavingTime:!0},{id:"SA Western Standard Time",offset:-240,offsetHours:-4,displayName:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",supportsDaylightSavingTime:!1},{id:"Newfoundland Standard Time",offset:-210,offsetHours:-3.5,displayName:"(UTC-03:30) Newfoundland",supportsDaylightSavingTime:!0},{id:"SA Eastern Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Cayenne, Fortaleza",supportsDaylightSavingTime:!1},{id:"Argentina Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Buenos Aires",supportsDaylightSavingTime:!0},{id:"E. South America Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Brasilia",supportsDaylightSavingTime:!0},{id:"Bahia Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Salvador",supportsDaylightSavingTime:!0},{id:"Montevideo Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Montevideo",supportsDaylightSavingTime:!0},{id:"Greenland Standard Time",offset:-180,offsetHours:-3,displayName:"(UTC-03:00) Greenland",supportsDaylightSavingTime:!0},{id:"UTC-02",offset:-120,offsetHours:-2,displayName:"(UTC-02:00) Coordinated Universal Time-02",supportsDaylightSavingTime:!1},{id:"Mid-Atlantic Standard Time",offset:-120,offsetHours:-2,displayName:"(UTC-02:00) Mid-Atlantic - Old",supportsDaylightSavingTime:!0},{id:"Azores Standard Time",offset:-60,offsetHours:-1,displayName:"(UTC-01:00) Azores",supportsDaylightSavingTime:!0},{id:"Cape Verde Standard Time",offset:-60,offsetHours:-1,displayName:"(UTC-01:00) Cape Verde Is.",supportsDaylightSavingTime:!1},{id:"Morocco Standard Time",offset:0,offsetHours:0,displayName:"(UTC) Casablanca",supportsDaylightSavingTime:!0},{id:"UTC",offset:0,offsetHours:0,displayName:"(UTC) Coordinated Universal Time",supportsDaylightSavingTime:!1},{id:"GMT Standard Time",offset:0,offsetHours:0,displayName:"(UTC) Dublin, Edinburgh, Lisbon, London",supportsDaylightSavingTime:!0},{id:"Greenwich Standard Time",offset:0,offsetHours:0,displayName:"(UTC) Monrovia, Reykjavik",supportsDaylightSavingTime:!1},{id:"Central European Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",supportsDaylightSavingTime:!0},{id:"Namibia Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Windhoek",supportsDaylightSavingTime:!0},{id:"W. Central Africa Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) West Central Africa",supportsDaylightSavingTime:!1},{id:"W. Europe Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",supportsDaylightSavingTime:!0},{id:"Central Europe Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",supportsDaylightSavingTime:!0},{id:"Romance Standard Time",offset:60,offsetHours:1,displayName:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",supportsDaylightSavingTime:!0},{id:"FLE Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",supportsDaylightSavingTime:!0},{id:"South Africa Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Harare, Pretoria",supportsDaylightSavingTime:!1},{id:"Turkey Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Istanbul",supportsDaylightSavingTime:!0},{id:"GTB Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Athens, Bucharest",supportsDaylightSavingTime:!0},{id:"Libya Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Tripoli",supportsDaylightSavingTime:!0},{id:"E. Europe Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) E. Europe",supportsDaylightSavingTime:!0},{id:"Jordan Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Amman",supportsDaylightSavingTime:!0},{id:"Middle East Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Beirut",supportsDaylightSavingTime:!0},{id:"Egypt Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Cairo",supportsDaylightSavingTime:!0},{id:"Syria Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Damascus",supportsDaylightSavingTime:!0},{id:"Israel Standard Time",offset:120,offsetHours:2,displayName:"(UTC+02:00) Jerusalem",supportsDaylightSavingTime:!0},{id:"Arab Standard Time",offset:180,offsetHours:3,displayName:"(UTC+03:00) Kuwait, Riyadh",supportsDaylightSavingTime:!1},{id:"E. Africa Standard Time",offset:180,offsetHours:3,displayName:"(UTC+03:00) Nairobi",supportsDaylightSavingTime:!1},{id:"Arabic Standard Time",offset:180,offsetHours:3,displayName:"(UTC+03:00) Baghdad",supportsDaylightSavingTime:!0},{id:"Kaliningrad Standard Time",offset:180,offsetHours:3,displayName:"(UTC+03:00) Kaliningrad, Minsk",supportsDaylightSavingTime:!0},{id:"Iran Standard Time",offset:210,offsetHours:3.5,displayName:"(UTC+03:30) Tehran",supportsDaylightSavingTime:!0},{id:"Mauritius Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Port Louis",supportsDaylightSavingTime:!0},{id:"Georgian Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Tbilisi",supportsDaylightSavingTime:!1},{id:"Caucasus Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Yerevan",supportsDaylightSavingTime:!0},{id:"Arabian Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Abu Dhabi, Muscat",supportsDaylightSavingTime:!1},{id:"Azerbaijan Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Baku",supportsDaylightSavingTime:!0},{id:"Russian Standard Time",offset:240,offsetHours:4,displayName:"(UTC+04:00) Moscow, St. Petersburg, Volgograd",supportsDaylightSavingTime:!0},{id:"Afghanistan Standard Time",offset:270,offsetHours:4.5,displayName:"(UTC+04:30) Kabul",supportsDaylightSavingTime:!1},{id:"Pakistan Standard Time",offset:300,offsetHours:5,displayName:"(UTC+05:00) Islamabad, Karachi",supportsDaylightSavingTime:!0},{id:"West Asia Standard Time",offset:300,offsetHours:5,displayName:"(UTC+05:00) Ashgabat, Tashkent",supportsDaylightSavingTime:!1},{id:"India Standard Time",offset:330,offsetHours:5.5,displayName:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",supportsDaylightSavingTime:!1},{id:"Sri Lanka Standard Time",offset:330,offsetHours:5.5,displayName:"(UTC+05:30) Sri Jayawardenepura",supportsDaylightSavingTime:!1},{id:"Nepal Standard Time",offset:345,offsetHours:5.75,displayName:"(UTC+05:45) Kathmandu",supportsDaylightSavingTime:!1},{id:"Central Asia Standard Time",offset:360,offsetHours:6,displayName:"(UTC+06:00) Astana",supportsDaylightSavingTime:!1},{id:"Bangladesh Standard Time",offset:360,offsetHours:6,displayName:"(UTC+06:00) Dhaka",supportsDaylightSavingTime:!0},{id:"Ekaterinburg Standard Time",offset:360,offsetHours:6,displayName:"(UTC+06:00) Ekaterinburg",supportsDaylightSavingTime:!0},{id:"Myanmar Standard Time",offset:390,offsetHours:6.5,displayName:"(UTC+06:30) Yangon (Rangoon)",supportsDaylightSavingTime:!1},{id:"SE Asia Standard Time",offset:420,offsetHours:7,displayName:"(UTC+07:00) Bangkok, Hanoi, Jakarta",supportsDaylightSavingTime:!1},{id:"N. Central Asia Standard Time",offset:420,offsetHours:7,displayName:"(UTC+07:00) Novosibirsk",supportsDaylightSavingTime:!0},{id:"Ulaanbaatar Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Ulaanbaatar",supportsDaylightSavingTime:!1},{id:"China Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",supportsDaylightSavingTime:!1},{id:"Singapore Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Kuala Lumpur, Singapore",supportsDaylightSavingTime:!1},{id:"North Asia Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Krasnoyarsk",supportsDaylightSavingTime:!0},{id:"Taipei Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Taipei",supportsDaylightSavingTime:!1},{id:"W. Australia Standard Time",offset:480,offsetHours:8,displayName:"(UTC+08:00) Perth",supportsDaylightSavingTime:!0},{id:"Korea Standard Time",offset:540,offsetHours:9,displayName:"(UTC+09:00) Seoul",supportsDaylightSavingTime:!1},{id:"North Asia East Standard Time",offset:540,offsetHours:9,displayName:"(UTC+09:00) Irkutsk",supportsDaylightSavingTime:!0},{id:"Tokyo Standard Time",offset:540,offsetHours:9,displayName:"(UTC+09:00) Osaka, Sapporo, Tokyo",supportsDaylightSavingTime:!1},{id:"AUS Central Standard Time",offset:570,offsetHours:9.5,displayName:"(UTC+09:30) Darwin",supportsDaylightSavingTime:!1},{id:"Cen. Australia Standard Time",offset:570,offsetHours:9.5,displayName:"(UTC+09:30) Adelaide",supportsDaylightSavingTime:!0},{id:"West Pacific Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Guam, Port Moresby",supportsDaylightSavingTime:!1},{id:"Tasmania Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Hobart",supportsDaylightSavingTime:!0},{id:"E. Australia Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Brisbane",supportsDaylightSavingTime:!1},{id:"AUS Eastern Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Canberra, Melbourne, Sydney",supportsDaylightSavingTime:!0},{id:"Yakutsk Standard Time",offset:600,offsetHours:10,displayName:"(UTC+10:00) Yakutsk",supportsDaylightSavingTime:!0},{id:"Vladivostok Standard Time",offset:660,offsetHours:11,displayName:"(UTC+11:00) Vladivostok",supportsDaylightSavingTime:!0},{id:"Central Pacific Standard Time",offset:660,offsetHours:11,displayName:"(UTC+11:00) Solomon Is., New Caledonia",supportsDaylightSavingTime:!1},{id:"Magadan Standard Time",offset:720,offsetHours:12,displayName:"(UTC+12:00) Magadan",supportsDaylightSavingTime:!0},{id:"Kamchatka Standard Time",offset:720,offsetHours:12,displayName:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old",supportsDaylightSavingTime:!0},{id:"Fiji Standard Time",offset:720,offsetHours:12,displayName:"(UTC+12:00) Fiji",supportsDaylightSavingTime:!0},{id:"New Zealand Standard Time",offset:720,offsetHours:12,displayName:"(UTC+12:00) Auckland, Wellington",supportsDaylightSavingTime:!0},{id:"UTC+12",offset:720,offsetHours:12,displayName:"(UTC+12:00) Coordinated Universal Time+12",supportsDaylightSavingTime:!1},{id:"Tonga Standard Time",offset:780,offsetHours:13,displayName:"(UTC+13:00) Nuku'alofa",supportsDaylightSavingTime:!1},{id:"Samoa Standard Time",offset:780,offsetHours:13,displayName:"(UTC+13:00) Samoa",supportsDaylightSavingTime:!0}],__daysToMonth365=[0,31,59,90,120,151,181,212,243,273,304,334,365],__daysToMonth366=[0,31,60,91,121,152,182,213,244,274,305,335,366],__daysPer4Years=1461,__daysPer100Years=36524,__daysPer400Years=146097,__daysTo1601=584388,__daysTo1899=693593,__daysTo10000=3652059,__minTicks=0,__maxTicks=3155378976000000000,__maxMillis=315537897600000;Smart.Utilities.Assign("TimeSpan",class{constructor(){const e=this;if(e.ticksPerMillisecond=1e4,e.millisecondsPerTick=1/1e4,e.ticksPerSecond=10000000,e.secondsPerTick=1/10000000,e.ticksPerMinute=600000000,e.minutesPerTick=1/600000000,e.ticksPerHour=36000000000,e.hoursPerTick=1/36000000000,e.ticksPerDay=864000000000,e.daysPerTick=1/864000000000,e.millisPerSecond=1e3,e.millisPerMinute=60000,e.millisPerHour=3600000,e.millisPerDay=86400000,e._ticks=0,1===arguments.length){if(isNaN(arguments[0]))throw new Error("Argument must be a number.");e._ticks=arguments[0]}else if(3===arguments.length)e._ticks=e.timeToMS(arguments[0],arguments[1],arguments[2],0);else if(4===arguments.length){const t=arguments[0],a=arguments[1],i=arguments[2],s=arguments[3];e._ticks=(1e3*(24*(3600*t)+3600*a+60*i+s)+0)*e.ticksPerMillisecond}else if(5===arguments.length){const t=arguments[0],a=arguments[1],i=arguments[2],s=arguments[3],o=arguments[4];e._ticks=(1e3*(24*(3600*t)+3600*a+60*i+s)+o)*e.ticksPerMillisecond}}ticks(){return this._ticks}days(){const e=this;return parseInt(e._ticks/e.ticksPerDay)}timeToMS(e,t,a,i){return parseInt((3600*e+60*t+a+i/1e3)*this.ticksPerSecond)}hours(){const e=this;return parseInt(e._ticks/e.ticksPerHour)%24}milliseconds(){const e=this;return parseInt(e._ticks/e.ticksPerMillisecond)%1e3}minutes(){const e=this;return parseInt(e._ticks/e.ticksPerMinute)%60}seconds(){const e=this;return parseInt(e._ticks/e.ticksPerSecond)%60}totalDays(){const e=this;return parseInt(e._ticks*e.daysPerTick)}totalHours(){const e=this;return parseInt(e._ticks*e.hoursPerTick)}totalMilliseconds(){const e=this,t=e._ticks*e.millisecondsPerTick;return parseInt(t)}totalMinutes(){const e=this;return parseInt(e._ticks*e.minutesPerTick)}totalSeconds(){const e=this;return parseInt(e._ticks*e.secondsPerTick)}add(e){const t=this._ticks+e._ticks,a=new Smart.Utilities.TimeSpan(t);return a}subtract(e){const t=this._ticks-e._ticks;return new Smart.Utilities.TimeSpan(t)}duration(){const e=this;return 0<=e._ticks?new Smart.Utilities.TimeSpan(e._ticks):new Smart.Utilities.TimeSpan(-e._ticks)}equals(e){return this._ticks===e._ticks}valueOf(){return this._ticks}compare(e,t){return e._ticks>t._ticks?1:e._ticks<t._ticks?-1:0}interval(e,t){const a=e*t+(0<=e?.5:-.5);return new Smart.Utilities.TimeSpan(a*this.ticksPerMillisecond)}fromDays(e){const t=this;return t.interval(e,t.millisPerDay)}fromHours(e){const t=this;return t.interval(e,t.millisPerHour)}fromMilliseconds(e){return this.interval(e,1)}fromMinutes(e){const t=this;return t.interval(e,t.millisPerMinute)}fromSeconds(e){const t=this;return t.interval(e,t.millisPerSecond)}fromTicks(e){return new Smart.Utilities.TimeSpan(e)}toString(){return this.totalMilliseconds().toString()}negate(){return new Smart.Utilities.TimeSpan(-this._ticks)}}),Smart.Utilities.Assign("DateTime",class{constructor(){const e=this;if(e.ticksPerMillisecond=1e4,e.millisecondsPerTick=1/1e4,e.ticksPerSecond=10000000,e.secondsPerTick=1/10000000,e.ticksPerMinute=600000000,e.minutesPerTick=1/600000000,e.ticksPerHour=36000000000,e.hoursPerTick=1/36000000000,e.ticksPerDay=864000000000,e.daysPerTick=1/864000000000,e.millisPerSecond=1e3,e.millisPerMinute=60000,e.millisPerHour=3600000,e.millisPerDay=86400000,e.daysPerYear=365,e.daysPer4Years=__daysPer4Years,e.daysPer100Years=__daysPer100Years,e.daysPer400Years=__daysPer400Years,e.daysTo1601=__daysTo1601,e.daysTo1899=__daysTo1899,e.daysTo10000=__daysTo10000,e.minTicks=0,e.maxTicks=__maxTicks,e.maxMillis=__maxMillis,e.datePartYear=0,e.datePartDayOfYear=1,e.datePartMonth=2,e.datePartDay=3,e.daysToMonth365=__daysToMonth365,e.daysToMonth366=__daysToMonth366,e.minValue=new Date(0),e.maxValue=new Date(3155378976000000000),e.ticksMask=0x3FFFFFFFFFFFFFFF,e.flagsMask=0xC000000000000000,e.localMask=0x8000000000000000,e.ticksCeiling=0x4000000000000000,e.kindUnspecified=0,e.kindUtc=0x4000000000000000,e.kindLocal=0x8000000000000000,e.kindLocalAmbiguousDst=0xC000000000000000,e.kindShift=62,e.regexTrim=/^\s+|\s+$/g,e.regexInfinity=/^[+-]?infinity$/i,e.regexHex=/^0x[a-f0-9]+$/i,e.regexParseFloat=/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/,e.calendar={"/":"/",":":":",firstDay:0,days:{names:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],namesAbbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],namesShort:["Su","Mo","Tu","We","Th","Fr","Sa"]},months:{names:["January","February","March","April","May","June","July","August","September","October","November","December",""],namesAbbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""]},AM:["AM","am","AM"],PM:["PM","pm","PM"],eras:[{name:"A.D.",start:null,offset:0}],twoDigitYearMax:2029,patterns:{d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",t:"h:mm tt",T:"h:mm:ss tt",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",M:"MMMM dd",Y:"yyyy MMMM",S:"yyyy'-'MM'-'dd'T'HH':'mm':'ss",ISO:"yyyy-MM-dd hh:mm:ss",ISO2:"yyyy-MM-dd HH:mm:ss",d1:"dd.MM.yyyy",d2:"dd-MM-yyyy",zone1:"yyyy-MM-ddTHH:mm:ss-HH:mm",zone2:"yyyy-MM-ddTHH:mm:ss+HH:mm",custom:"yyyy-MM-ddTHH:mm:ss.fff",custom2:"yyyy-MM-dd HH:mm:ss.fff",FP:"yyyy-MM-dd HH:mm:ss:fff:uu:nn:pp:ee:aa:xx:oo",FPA:"yyyy/MM/dd HH:mm:ss:fffuunnppeeaaxxoo",FPA2:"yyyy-MM-dd HH:mm:ss:fffuunnppeeaaxxoo",FT:"HH:mm:ss:fff:uu:nn:pp:ee:aa:xx:oo",PP:"yyyy-MM-dd HH:mm:ss:fff:uu:nn:pp",PT:"HH:mm:ss:fff:uu:nn:pp"},percentsymbol:"%",currencysymbol:"$",currencysymbolposition:"before",decimalseparator:".",thousandsseparator:","},e.dateData=0,e.timeZone=null,e.timeZones=__timeZones,e._codeToUnit={u:"_microsecond",uu:"_microsecond",n:"_nanosecond",nn:"_nanosecond",p:"_picosecond",pp:"_picosecond",e:"_femtosecond",ee:"_femtosecond",a:"_attosecond",aa:"_attosecond",x:"_zeptosecond",xx:"_zeptosecond",o:"_yoctosecond",oo:"_yoctosecond"},e._smallUnits=["_microsecond","_nanosecond","_picosecond","_femtosecond","_attosecond","_zeptosecond","_yoctosecond"],e._microsecond=0,e._nanosecond=0,e._picosecond=0,e._femtosecond=0,e._attosecond=0,e._zeptosecond=0,e._yoctosecond=0,0===arguments.length){const t=new Date;e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}else if(1===arguments.length){void 0===arguments[0]&&(arguments[0]="todayDate");const t="number"==typeof arguments[0]&&isFinite(arguments[0]);if(!t&&"string"==typeof arguments[0]){if("today"===arguments[0]){const t=new Date;e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}else if("todayDate"===arguments[0]){const t=new Date;t.setHours(0,0,0,0),e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}else{const t=e.tryparseDate(arguments[0]);e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}}else if("number"==typeof arguments[0])e.dateData=arguments[0];else if(arguments[0]instanceof Date){const t=arguments[0];e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}else e.dateData=arguments[0]}else if(2===arguments.length){void 0===arguments[0]&&(arguments[0]="todayDate");const t="number"==typeof arguments[0]&&isFinite(arguments[0]);if(!t&&"string"==typeof arguments[0]){if("today"===arguments[0]){const t=new Date;e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}else if("todayDate"===arguments[0]){const t=new Date;t.setHours(0,0,0,0),e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}else{const t=e.tryparseDate(arguments[0]);e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}}else if("number"==typeof arguments[0])e.dateData=arguments[0];else if(arguments[0]instanceof Date){const t=arguments[0];e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}else e.dateData=arguments[0];e.validateTimeZone(arguments[1])}else if(2<arguments.length)if("string"==typeof arguments[0]){const t=e.tryparseDate(arguments[0],arguments[2],arguments[1]);e.dateData=e.dateToMS(t.getFullYear(),t.getMonth()+1,t.getDate())+e.timeToMS(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds())}else{const t=arguments[0],a=arguments[1]-1,i=arguments[2],s=arguments[3]||0,o=arguments[4]||0,d=arguments[5]||0,n=arguments[6]||0,r=arguments[7]||0,m=arguments[8]||0,f=arguments[9]||0,l=arguments[10]||0,u=arguments[11]||0,y=arguments[12]||0,p=arguments[13]||0,g=new Date(t,a,i,s,o,d,n);1970>t&&g.setFullYear(t),e.dateData=e.dateToMS(g.getFullYear(),g.getMonth()+1,g.getDate())+e.timeToMS(g.getHours(),g.getMinutes(),g.getSeconds(),g.getMilliseconds()),e._microsecond=r,e._nanosecond=m,e._picosecond=f,e._femtosecond=l,e._attosecond=u,e._zeptosecond=y,e._yoctosecond=p,arguments[14]&&e.validateTimeZone(arguments[14])}e.timeZone||e.validateTimeZone("Local")}static validateDate(e,t,a){return e instanceof Smart.Utilities.DateTime?e:e instanceof Date?new Smart.Utilities.DateTime(e):new RegExp(/^\d{1,2}\/\d{1,2}\/\d{4}(, \d{1,2}:\d{2}:\d{1,2} [A|P]M)?$/).test(e)?new Smart.Utilities.DateTime(new Date(e)):"string"==typeof e?this.parseDateString(e,t,a):"number"==typeof e?new Smart.Utilities.DateTime(new Date(e)):t}static parseDateString(e,t,a){const i=e.indexOf("Date("),s=e.indexOf("DateTime("),o=e.lastIndexOf(")");let d=e;if((-1!==i||-1!==s)&&-1!==o){if(d=-1===i?e.slice(s+9,o):e.slice(i+5,o),d=d.replace(/'/g,"").replace(/"/g,"").replace(/^\s+|\s+$|\s+(?=\s)/g,""),""===d.trim())return new Smart.Utilities.DateTime;if(new RegExp(/(^(\d+)(\s*,\s*\d+)+(\s*,\s*[a-zA-Z ]+)?$)/g).test(d))return d=d.split(","),d.map(function(e,t){d[t]=isNaN(d[t])?e.trim():parseInt(e)}),-1!==i&&d[1]++,d.unshift(null),d=new(Function.prototype.bind.apply(Smart.Utilities.DateTime,d)),d}else{const t=new Smart.Utilities.DateTime,i=t.parseDate(e,a);if(i)return d=new Smart.Utilities.DateTime(i),t.copySmallTimePartValues(d),d}if(""===d.trim())return t;if(!isNaN(d))return d=new Date(parseInt(d,10)),new Smart.Utilities.DateTime(d);try{const e=d.split(",");2===e.length?(e[1]=e[1].trim(),e.unshift(null),d=new(Function.prototype.bind.apply(Smart.Utilities.DateTime,e))):d=new Smart.Utilities.DateTime(d)}catch(e){d=t}return d}static fromFullTimeStamp(e){e=e.toString();const t=new Smart.Utilities.DateTime(parseFloat(e.slice(0,e.length-21)));for(let a=e.slice(e.length-21),i=0;0<a.length;)t[t._smallUnits[i]]=parseInt(a.slice(0,3),10),a=a.slice(3),i++;return t}static getConstructorParameters(e){return[e.year(),e.month(),e.day(),e.hour(),e.minute(),e.second(),e.millisecond(),e._microsecond,e._nanosecond,e._picosecond,e._femtosecond,e._attosecond,e._zeptosecond,e._yoctosecond,e.timeZone]}internalMS(){return this.dateData}getDatePart(e){const t=this,a=t.internalMS();let i=parseInt(a/t.millisPerDay);const s=parseInt(i/t.daysPer400Years);i-=s*t.daysPer400Years;let o=parseInt(i/t.daysPer100Years);4===o&&(o=3),i-=o*t.daysPer100Years;const d=parseInt(i/t.daysPer4Years);i-=d*t.daysPer4Years;let r=parseInt(i/t.daysPerYear);if(4===r&&(r=3),e===t.datePartYear)return parseInt(400*s+100*o+4*d+r+1);if(i-=r*t.daysPerYear,e===t.datePartDayOfYear)return parseInt(i+1);const f=3===r&&(24!==d||3===o),l=f?t.daysToMonth366:t.daysToMonth365;let u=i>>6;for(;i>=l[u];)u++;return e===t.datePartMonth?parseInt(u):parseInt(i-l[u-1]+1)}dayOfWeek(){const e=this,t=e.dateData,a=parseInt(t/e.millisPerDay+1)%7;return a}dayOfYear(){const e=this;return e.getDatePart(e.datePartDayOfYear)}weekOfYear(e){var t=Math.floor;const a=this,i=a.toDate(),s=e||a.calendar.firstDay,o=new Date(i.getFullYear(),0,1),d=t((i.getTime()-o.getTime()-6e4*(i.getTimezoneOffset()-o.getTimezoneOffset()))/864e5)+1;let n=o.getDay()-s;n=0<=n?n:n+7;let r;if(!(4>n))r=t((d+n-1)/7);else if(r=t((d+n-1)/7)+1,52<r){const e=new Date(i.getFullYear()+1,0,1);let t=e.getDay()-s;t=0<=t?t:t+7,r=4>t?1:53}return r}subtract(e){const t=this;return new Smart.Utilities.TimeSpan(t.dateData*t.ticksPerMillisecond-e.dateData*t.ticksPerMillisecond)}dateToMS(e,t,a){const i=this;if(1<=e&&9999>=e&&1<=t&&12>=t){e=parseInt(e);const s=i.isLeapYear(e)?i.daysToMonth366:i.daysToMonth365;if(1<=a&&a<=s[t]-s[t-1]){const o=e-1,d=365*o+parseInt(o/4)-parseInt(o/100)+parseInt(o/400)+s[t-1]+a-1;return d*i.millisPerDay}}}isLeapYear(e){if(1>e||9999<e)throw new Error("Year out of Range");return 0==e%4&&(0!=e%100||0==e%400)}timeToMS(e,t,a,i){const s=this;if(0<=e&&24>e&&0<=t&&60>t&&0<=a&&60>a){const o=parseInt(3600*e+60*t+a);return 0<i&&1e3>i?o*s.millisPerSecond+i:o*s.millisPerSecond}}daysInMonth(e,t){if(1>t||12<t)throw new Error("Month out of Range");const a=this,i=a.isLeapYear(e)?a.daysToMonth366:a.daysToMonth365;return i[t]-i[t-1]}arrayIndexOf(e,t){return e.indexOf(t)}startsWith(e,t){return 0===e.indexOf(t)}endsWith(e,t){return e.substr(e.length-t.length)===t}trim(e){return(e+"").replace(this.regexTrim,"")}expandFormat(e,t){t=t||"F";let a,i=e.patterns,s=t.length;if(i[t])return i[t];if(1===s){if(a=i[t],!a)throw"Invalid date format string '"+t+"'.";t=a}else 2===s&&"%"===t.charAt(0)&&(t=t.charAt(1));return t}getEra(e,t){if(!t)return 0;if("string"==typeof e)return 0;let a,s=e.getTime();for(let o=0,i=t.length;o<i;o++)if(a=t[o].start,null===a||s>=a)return o;return 0}toUpper(e){return e.split("\xA0").join(" ").toUpperCase()}toUpperArray(e){const t=[];for(let a=0,i=e.length;a<i;a++)t[a]=this.toUpper(e[a]);return t}getEraYear(e,t,a,i){let s=e.getFullYear();return!i&&t.eras&&(s-=t.eras[a].offset),s}getDayIndex(e,t,a){const i=this,s=e.days;let o,d=e._upperDays;return d||(e._upperDays=d=[i.toUpperArray(s.names),i.toUpperArray(s.namesAbbr),i.toUpperArray(s.namesShort)]),t=t.toUpperCase(),a?(o=i.arrayIndexOf(d[1],t),-1===o&&(o=i.arrayIndexOf(d[2],t))):o=i.arrayIndexOf(d[0],t),o}getMonthIndex(e,t,a){const s=this;let o=e.months,d=e.monthsGenitive||e.months,n=e._upperMonths,r=e._upperMonthsGen;n||(e._upperMonths=n=[s.toUpperArray(o.names),s.toUpperArray(o.namesAbbr)],e._upperMonthsGen=r=[s.toUpperArray(d.names),s.toUpperArray(d.namesAbbr)]),t=s.toUpper(t);let m=s.arrayIndexOf(a?n[1]:n[0],t);return 0>m&&(m=s.arrayIndexOf(a?r[1]:r[0],t)),m}appendPreOrPostMatch(e,t){let a=0,i=!1;for(let s=0,o=e.length;s<o;s++){const o=e.charAt(s);switch(o){case"'":i?t.push("'"):a++,i=!1;break;case"\\":i&&t.push("\\"),i=!i;break;default:t.push(o),i=!1;}}return a}getTokenRegExp(){return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyyy|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|uu|u|nn|n|pp|p|ee|e|aa|a|xx|x|oo|o|i{1,24}|zzz|zz|z|gg|g/g}tryparseDate(e,t,a){const s=this;if((void 0===t||null===t)&&(t=s.calendar),void 0!==a){if(a instanceof Array)for(let o=0;o<a.length;o++){const i=s.parseDate(e,a[o],t);if(i)return i}const i=s.parseDate(e,a,t);if(i)return i}if(""===e)return null;if(null===e||void 0===e||e.substring||(e=e.toString()),null!==e&&void 0!==e&&"/Date("===e.substring(0,6)){const t=/^\/Date\((-?\d+)(\+|-)?(\d+)?\)\/$/;let a=new Date(+e.replace(/\/Date\((\d+)\)\//,"$1"));if("Invalid Date"===a){const t=e.match(/^\/Date\((\d+)([-+]\d\d)(\d\d)\)\/$/);a=null,t&&(a=new Date(1*t[1]+36e5*t[2]+6e4*t[3]))}if(null===a||void 0===a||"Invalid Date"===a||isNaN(a)){const a=t.exec(e);if(a){const e=new Date(parseInt(a[1]));if(a[2]){let t=parseInt(a[3]);"-"===a[2]&&(t=-t);const i=e.getUTCMinutes();e.setUTCMinutes(i-t)}if(!isNaN(e.valueOf()))return e}}return a}const i={smartdate:"yyyy-MM-dd HH:mm:ss",d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",t:"h:mm tt",T:"h:mm:ss tt",f:"dddd, MMMM dd, yyyy h:mm tt",F:"dddd, MMMM dd, yyyy h:mm:ss tt",M:"MMMM dd",Y:"yyyy MMMM",S:"yyyy'-'MM'-'dd'T'HH':'mm':'ss",ISO:"yyyy-MM-dd hh:mm:ss",ISO2:"yyyy-MM-dd HH:mm:ss",ISO8601:"yyyy-MM-ddTHH:mm:ss.sssZ",d1:"dd.MM.yyyy",d2:"dd-MM-yyyy",d3:"MM-dd-yyyy",d4:"MM.dd.yyyy",zone1:"yyyy-MM-ddTHH:mm:ss-HH:mm",zone2:"yyyy-MM-ddTHH:mm:ss+HH:mm",custom:"yyyy-MM-ddTHH:mm:ss.fff",custom2:"yyyy-MM-dd HH:mm:ss.fff",iso:"yyyy-MM-ddTHH:mm:ssZ",iso_date1:"yyyy-MM-dd",iso_date2:"yyyy-MM-dd",iso_date3:"yyyy-ddd",iso_date4:"yyyy-MM-dd HH:mm",iso_date5:"yyyy-MM-dd HH:mm Z",iso_date6:"yyyy-MMM-dd",iso_date7:"yyyy-MM",iso_date8:"yyyy-MMM",iso_date9:"yyyy-MMMM",iso_date10:"yyyy-MMMM-dd",iso_time1:"HH:mm:ss.tttt",iso_time2:"HH:mm:ss",iso_time3:"HH:mm",iso_time4:"HH",iso_time5:"yyyyyy-MM-dd",iso_time6:"yyyyyy-MM-dd"};for(let o in i){const a=s.parseDate(e,i[o],t);if(a)return a}const o=t.patterns;for(let i in o){const a=s.parseDate(e,o[i],t);if(a){if("ISO"==i){const a=s.parseDate(e,o.ISO2,t);if(a)return a}return a}}let d;if("string"==typeof e){e=s.trim(e);const a=[":","/","-"," ",","];e=function(e,t,a){return a.replace(new RegExp(e,"g"),t)}(", ",",",e);let i="",o=e;0<=e.indexOf(":")?(i=e.substring(e.indexOf(":")-2),i=s.trim(i),o=e.substring(0,e.indexOf(":")-2)):0<=e.toUpperCase().indexOf("AM")?(i=e.substring(e.toUpperCase().indexOf("AM")-2),i=s.trim(i),o=e.substring(0,e.toUpperCase().indexOf("AM")-2)):0<=e.toUpperCase().indexOf("PM")&&(i=e.substring(e.toUpperCase().indexOf("PM")-2),i=s.trim(i),o=e.substring(0,e.toUpperCase().indexOf("PM")-2));let n=new Date,r=!1;if(o){for(let e=0;e<a.length;e++)if(0<=o.indexOf(a[e])){d=o.split(a[e]);break}let e=[],f=[],l=[],m=null,u=null;for(let a=0;a<d.length;a++){const i=d[a],o=s.parseDate(i,"d",t)||s.parseDate(i,"dd",t)||s.parseDate(i,"ddd",t)||s.parseDate(i,"dddd",t);if(o&&(e.push(o.getDate()),2<i.length)){m=a;break}}for(let e=0;e<d.length;e++){const a=d[e],i=s.parseDate(a,"M",t)||s.parseDate(a,"MM",t)||s.parseDate(a,"MMM",t)||s.parseDate(a,"MMMM",t);if(i){if(null!==m&&void 0!==m&&m===e)continue;if(f.push(i.getMonth()),2<a.length){u=e;break}}}for(let e=0;e<d.length;e++){const a=d[e],i=s.parseDate(a,"yyyy",t);if(i){if(null!==m&&void 0!==m&&m===e)continue;if(null!==u&&void 0!==u&&u===e)continue;l.push(i.getFullYear())}}const i=[];for(let t=0;t<e.length;t++)for(let a=0;a<f.length;a++)for(let s=0;s<l.length;s++){const o=new Date(l[s],f[a],e[t]);1970>l[s]&&o.setFullYear(l[s]),isNaN(o.getTime())||i.push(o)}0<i.length&&(n=i[0],r=!0)}if(i){const e=0<=i.indexOf(":")?i.split(":"):i,a=s.parseDate(i,"h:mm tt",t)||s.parseDate(i,"HH:mm:ss.fff",t)||s.parseDate(i,"HH:mm:ss.ff",t)||s.parseDate(i,"h:mm:ss tt",t)||s.parseDate(i,"HH:mm:ss.tttt",t)||s.parseDate(i,"HH:mm:ss",t)||s.parseDate(i,"HH:mm",t)||s.parseDate(i,"HH",t);let o=0,d=0,m=0,f=0;a&&!isNaN(a.getTime())?(o=a.getHours(),d=a.getMinutes(),m=a.getSeconds(),f=a.getMilliseconds()):(1===e.length&&(o=parseInt(e[0])),2===e.length&&(o=parseInt(e[0]),d=parseInt(e[1])),3===e.length&&(o=parseInt(e[0]),d=parseInt(e[1]),0<=e[2].indexOf(".")?(m=parseInt(e[2].toString().split(".")[0]),f=parseInt(e[2].toString().split(".")[1])):m=parseInt(e[2])),4===e.length&&(o=parseInt(e[0]),d=parseInt(e[1]),m=parseInt(e[2]),f=parseInt(e[3]))),!n||isNaN(o)||isNaN(d)||isNaN(m)||isNaN(f)||(n.setHours(o,d,m,f),r=!0)}if(r)return n}if(null!==e&&void 0!==e){d=[":","/","-"];let t=!0;for(let a=0;a<d.length;a++)-1!==e.indexOf(d[a])&&(t=!1);if(t){const t=new Number(e);if(!isNaN(t))return new Date(t)}}return null}getParseRegExp(e,t){const a=this;let i=e._parseRegExp;if(!i)e._parseRegExp=i={};else{const e=i[t];if(e)return e}let s,o=a.expandFormat(e,t).replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g,"\\\\$1"),d=["^"],n=[],r=0,f=0,l=a.getTokenRegExp();for(;null!==(s=l.exec(o));){const e=o.slice(r,s.index);if(r=l.lastIndex,f+=a.appendPreOrPostMatch(e,d),f%2){d.push(s[0]);continue}let t,i=s[0],m=i.length;switch(i){case"dddd":case"ddd":case"MMMM":case"MMM":case"gg":case"g":t="(\\D+)";break;case"tt":case"t":t="(\\D*)";break;case"yyyyy":t="(\\d{1,4})";break;case"yyyy":t="(\\d{"+m+"})";break;case"fff":case"ff":case"f":t="(\\d{1,"+m+"})";break;case"dd":case"d":case"MM":case"M":case"yy":case"y":case"HH":case"H":case"hh":case"h":case"mm":case"m":case"ss":case"s":t="(\\d\\d?)";break;case"uu":case"nn":case"pp":case"ee":case"aa":case"xx":case"oo":t="(\\d{1,3})";break;case"zzz":t="([+-]?\\d\\d?:\\d{2})";break;case"zz":case"z":t="([+-]?\\d\\d?)";break;case"/":t="/";break;default:if(/i{1,24}/.test(i))t="(\\d{"+i.length+"})";else throw"Invalid date format pattern '"+i+"'.";}(t&&d.push(t),"/"!==i)&&n.push(s[0])}a.appendPreOrPostMatch(o.slice(r),d),d.push("$");const m=d.join("").replace(/\s+/g,"\\s+");return i[t]={regExp:m,groups:n}}outOfRange(e,t,a){return e<t||e>a}expandYear(e,t){const a=this,i=new Date,s=a.getEra(i);if(100>t){let o=e.twoDigitYearMax;o="string"==typeof o?new Date().getFullYear()%100+parseInt(o,10):o;const d=a.getEraYear(i,e,s);t+=d-d%100,t>o&&(t-=100)}return t}padZeros(e,t){let a,i=e+"";return 1<t&&i.length<t?(a=["0","00","000"][t-2]+i,a.substr(a.length-t,t)):(a=i,a)}parseDate(e,t,a){const i=this;(void 0===a||null===a)&&(a=i.calendar),e=i.trim(e);const s=a,o=i.getParseRegExp(s,t),d=new RegExp(o.regExp).exec(e);if(null===d)return null;let n,r=o.groups,m=null,f=null,l=null,u=null,y=null,p=0,g=0,T=0,c=0,M=null,S=!1;for(let o=0,h=r.length;o<h;o++){const e=d[o+1];if(e){const t=r[o],a=t.length,d=parseInt(e,10);switch(t){case"dd":case"d":if(u=d,i.outOfRange(u,1,31))return null;break;case"MMM":case"MMMM":case"MMMMM":case"MMMMMM":case"MMMMMMM":case"MMMMMMMM":if(l=i.getMonthIndex(s,e,3===a),i.outOfRange(l,0,11))return null;break;case"M":case"MM":if(l=d-1,i.outOfRange(l,0,11))return null;break;case"y":case"yy":case"yyyy":if(f=4>a?i.expandYear(s,d):d,i.outOfRange(f,0,9999))return null;break;case"h":case"hh":if(p=d,12===p&&(p=0),i.outOfRange(p,0,11))return null;break;case"H":case"HH":if(p=d,i.outOfRange(p,0,23))return null;break;case"m":case"mm":if(g=d,i.outOfRange(g,0,59))return null;break;case"s":case"ss":if(T=d,i.outOfRange(T,0,59))return null;break;case"tt":case"t":if(S=s.PM&&(e===s.PM[0]||e===s.PM[1]||e===s.PM[2]),!S&&(!s.AM||e!==s.AM[0]&&e!==s.AM[1]&&e!==s.AM[2]))return null;break;case"f":case"ff":case"fff":if(c=d*Math.pow(10,3-a),i.outOfRange(c,0,999))return null;break;case"uu":case"nn":case"pp":case"ee":case"aa":case"xx":case"oo":if(i.outOfRange(d,0,1e3))return null;i[i._codeToUnit[t]]=d;break;case"ddd":case"dddd":if(y=i.getDayIndex(s,e,3===a),i.outOfRange(y,0,6))return null;break;case"zzz":{const t=e.split(/:/);if(2!==t.length)return null;if(n=parseInt(t[0],10),i.outOfRange(n,-12,13))return null;const a=parseInt(t[1],10);if(i.outOfRange(a,0,59))return null;M=60*n+(i.startsWith(e,"-")?-a:a);break}case"z":case"zz":if(n=d,i.outOfRange(n,-12,13))return null;M=60*n;break;case"g":case"gg":{let t=e;if(!t||!s.eras)return null;t=this.trim(t.toLowerCase());for(let e=0,a=s.eras.length;e<a;e++)if(t===s.eras[e].nathat.toLowerCase()){m=e;break}if(null===m)return null;break}default:{let t=e;1==t.length%3?t+="00":2==t.length%3&&(t+="0"),c=parseInt(t.slice(0,3),10),t=t.slice(3);for(let e=0;0<t.length;)i[i._smallUnits[e]]=parseInt(t.slice(0,3),10),t=t.slice(3),e++}}}}let h,D=new Date,H=s.convert;if(h=D.getFullYear(),null===f?f=h:s.eras&&(f+=s.eras[m||0].offset),null===l&&(l=0),null===u&&(u=1),!H){if(D.setFullYear(f,l,u),D.getDate()!==u)return null;if(null!==y&&D.getDay()!==y)return null}else if(D=H.toGregorian(f,l,u),null===D)return null;if(S&&12>p&&(p+=12),D.setHours(p,g,T,c),null!==M){const e=D.getMinutes()-(M+D.getTimezoneOffset());D.setHours(D.getHours()+parseInt(e/60,10),e%60)}return D}toString(e,t){function a(e,t){if(u)return u[t];if(void 0!==e.getMonth)switch(t){case 0:return e.getFullYear();case 1:return e.getMonth();case 2:return e.getDate();}}var i=Math.abs,s=Math.floor;const o=this;void 0===e&&(e="yyyy-MM-dd HH:mm:ss");const d=o.dateData.toString()+o.getFractionsOfSecondStamp()+e+(o.timeZone||"");if(Smart.Utilities.DateTime.cache&&Smart.Utilities.DateTime.cache[d])return Smart.Utilities.DateTime.cache[d];const n=o.toDate();if((void 0===t||null===t)&&(t=o.calendar),"string"==typeof n)return n;if(!e||!e.length||"i"===e){let e;return e=o.formatDate(n,t.patterns.F,t),e}const r=t.eras,m="s"===e;e=o.expandFormat(t,e);const f=[];let l,u,y=0,p=o.getTokenRegExp();for(;;){const d=p.lastIndex,u=p.exec(e),g=e.slice(d,u?u.index:e.length);if(y+=o.appendPreOrPostMatch(g,f),!u)break;if(y%2){f.push(u[0]);continue}const T=u[0],c=T.length;let M;if(/i{1,24}/.test(T)){f.push(o.getFirstNDigitsOfPrecision(T.length));continue}switch(T){case"ddd":case"dddd":{const e=3===c?t.days.namesAbbr:t.days.names;f.push(e[n.getDay()]);break}case"d":case"dd":f.push(o.padZeros(a(n,2),c));break;case"MMM":case"MMMM":M=a(n,1),f.push(t.months[3===c?"namesAbbr":"names"][M]);break;case"M":case"MM":f.push(o.padZeros(a(n,1)+1,c));break;case"y":case"yy":case"yyyy":M=o.getEraYear(n,t,o.getEra(n,r),m),4>c&&(M%=100),f.push(o.padZeros(M,c));break;case"h":case"hh":l=n.getHours()%12,0===l&&(l=12),f.push(o.padZeros(l,c));break;case"H":case"HH":f.push(o.padZeros(n.getHours(),c));break;case"m":case"mm":f.push(o.padZeros(n.getMinutes(),c));break;case"s":case"ss":f.push(o.padZeros(n.getSeconds(),c));break;case"t":case"tt":M=12>n.getHours()?t.AM?t.AM[0]:" ":t.PM?t.PM[0]:" ",f.push(1===c?M.charAt(0):M);break;case"f":case"ff":case"fff":f.push(o.padZeros(n.getMilliseconds(),3).substr(0,c));break;case"u":case"n":case"p":case"e":case"a":case"x":case"o":f.push(o[o._codeToUnit[T]]);break;case"uu":case"nn":case"pp":case"ee":case"aa":case"xx":case"oo":f.push(o.padZeros(o[o._codeToUnit[T]],3));break;case"z":case"zz":f.push((0<=o.timeZoneOffsetHours?"+":"-")+o.padZeros(s(i(o.timeZoneOffsetHours)),c));break;case"zzz":f.push((0<=o.timeZoneOffsetHours?"+":"-")+o.padZeros(s(i(o.timeZoneOffsetHours)),2)+":"+o.padZeros(60*i(o.timeZoneOffsetHours%1),2));break;case"g":case"gg":t.eras&&f.push(t.eras[o.getEra(n,r)].name);break;case"/":f.push(t["/"]);break;default:throw"Invalid date format pattern '"+T+"'.";}}const g=f.join("");return Smart.Utilities.DateTime.cache||(Smart.Utilities.DateTime.cache=[]),Smart.Utilities.DateTime.cache[d]=g,g}getFractionsOfSecondStamp(){const e=this;return e._microsecond.toString()+e._nanosecond+e._picosecond+e._femtosecond+e._attosecond+e._zeptosecond+e._yoctosecond}getFirstNDigitsOfPrecision(e,t){const a=this,i=""+(!0===t?"":a.padZeros(a.millisecond(),3))+a.padZeros(a._microsecond,3)+a.padZeros(a._nanosecond,3)+a.padZeros(a._picosecond,3)+a.padZeros(a._femtosecond,3)+a.padZeros(a._attosecond,3)+a.padZeros(a._zeptosecond,3)+a.padZeros(a._yoctosecond,3);return i.slice(0,e)}copySmallTimePartValues(e){const t=this;e._microsecond=t._microsecond,e._nanosecond=t._nanosecond,e._picosecond=t._picosecond,e._femtosecond=t._femtosecond,e._attosecond=t._attosecond,e._zeptosecond=t._zeptosecond,e._yoctosecond=t._yoctosecond}add(e,t,a){const i=this,s=i.internalMS();if(void 0===t){if(!1===a)return i.dateData=s+parseInt(e._ticks/i.ticksPerMillisecond),i;const t=new Smart.Utilities.DateTime(s+parseInt(e._ticks/i.ticksPerMillisecond));return i.copyTimeZone(t),i.copySmallTimePartValues(t),t}const o=e*t;if(o<=-i.maxMillis||o>=i.maxMillis)throw new Error("Out of Range");if(!1===a)return i.dateData=s+o,i;const d=new Smart.Utilities.DateTime(s+o);return i.copyTimeZone(d),i.copySmallTimePartValues(d),d}addDays(e,t){const a=this;return a.add(e,a.millisPerDay,t)}clone(){const e=this,t=new Smart.Utilities.DateTime(e.dateData);return e.copyTimeZone(t),e.copySmallTimePartValues(t),t}clearTime(){const e=this,t=e.month(),a=e.year(),i=e.day(),s=new Smart.Utilities.DateTime(a,t,i,0,0,0,0);return e.copyTimeZone(s),s}addHours(e,t){const a=this;return a.add(e,a.millisPerHour,t)}addDeciseconds(e,t){return this.add(100*e,1,t)}addCentiseconds(e,t){return this.add(10*e,1,t)}addMilliseconds(e,t){return this.add(e,1,t)}addMinutes(e,t){const a=this;return a.add(e,a.millisPerMinute,t)}addMonths(e,t){const a=this;if(-12e4>e||12e4<e)throw new Error("Invalid Months Value");let s=parseInt(a.getDatePart(a.datePartYear)),o=parseInt(a.getDatePart(a.datePartMonth)),i=parseInt(a.getDatePart(a.datePartDay));if(0==e%12)s+=e/12;else{const t=o-1+e;0<=t?(o=t%12+1,s+=t/12):(o=12+(t+1)%12,s+=(t-11)/12),s=parseInt(s)}if(1>s||9999<s)throw new Error("Year out of range");const n=a.daysInMonth(s,o);if(i>n&&(i=n),!1===t)return a.dateData=a.dateToMS(s,o,i)+a.internalMS()%a.millisPerDay,a;const r=new Smart.Utilities.DateTime(a.dateToMS(s,o,i)+a.internalMS()%a.millisPerDay);return a.copyTimeZone(r),a.copySmallTimePartValues(r),r}addSeconds(e,t){const a=this;return a.add(e,a.millisPerSecond,t)}addYears(e,t){return this.addMonths(12*e,t)}addMicroseconds(e,t){if(0===e)return;const a=this;let i,s;0>e&&0===a.hour()&&0===a.minute()&&0===a.second()&&0===a.millisecond()&&0===a._microsecond&&(i=parseInt(e/1e3,10)-1,s=1e3+e%1e3);const o=1e3*a.timeToMS(a.hour(),a.minute(),a.second(),a.millisecond())+a._microsecond,d=o+e;void 0==i&&(i=parseInt(d/1e3,10)-parseInt(o/1e3,10)),void 0===s&&(s=parseInt(d%1e3,10));let n;return 0!==i&&(n=a.addMilliseconds(i,t)),!1===t?void(a._microsecond=s):(n||(n=a.clone()),n._microsecond=s,n)}addFractionsOfSecond(e,t,a,i,s){if(0===e)return;const o=this,d=1e3*o[i]+o[a],n=e+d;let r,m=parseInt(n/1e3,10)-parseInt(d/1e3,10),f=parseInt(n%1e3,10);return 0>e&&0>n&&0>f&&(m--,f=1e3+f),0!=m&&(r=o[s](m,t)),!1===t?void(o[a]=f):(r||(r=o.clone()),r[a]=f,r)}addNanoseconds(e,t){return this.addFractionsOfSecond(e,t,"_nanosecond","_microsecond","addMicroseconds")}addPicoseconds(e,t){return this.addFractionsOfSecond(e,t,"_picosecond","_nanosecond","addNanoseconds")}addFemtoseconds(e,t){return this.addFractionsOfSecond(e,t,"_femtosecond","_picosecond","addPicoseconds")}addAttoseconds(e,t){return this.addFractionsOfSecond(e,t,"_attosecond","_femtosecond","addFemtoseconds")}addZeptoseconds(e,t){return this.addFractionsOfSecond(e,t,"_zeptosecond","_attosecond","addAttoseconds")}addYoctoseconds(e,t){return this.addFractionsOfSecond(e,t,"_yoctosecond","_zeptosecond","addZeptoseconds")}getTimeZoneOffset(){const e=new Date,t=new Date(e.getFullYear(),0,1),a=new Date(e.getFullYear(),6,1),i=e.getTimezoneOffset()<Math.max(t.getTimezoneOffset(),a.getTimezoneOffset());return{offset:-(e.getTimezoneOffset()/60),dst:+i}}isInDaylightSavingTime(){const e=new Date,t=new Date(e.getFullYear(),0,1),a=new Date(e.getFullYear(),6,1);return this.date().getTimezoneOffset()<Math.max(t.getTimezoneOffset(),a.getTimezoneOffset())}supportsDaylightSavingTime(){const e=new Date,t=new Date(e.getFullYear(),0,1),a=new Date(e.getFullYear(),6,1);return t.getTimezoneOffset()!==a.getTimezoneOffset()}date(){const e=this,t=e.month(),a=e.year(),i=e.day(),s=new Smart.Utilities.DateTime(a,t,i);return e.copyTimeZone(s),s}isWeekend(){const e=this;return 0===e.dayOfWeek()||6===e.dayOfWeek()}toDate(e){const t=this,a=t.month(),i=t.year(),s=t.day(),o=t.hour(),d=t.minute(),n=t.second(),r=t.millisecond();let m=new Date(i,a-1,s);if(1970>i&&m.setFullYear(i),m.setHours(o,d,n,r),e){const a=t.timeZones.filter(function(t){return t.id===e});if(a.length){let e=a[0].offset;const i=m.getTime();let s=1e3*(60*m.getTimezoneOffset());if(t.timeZone){const e=t.timeZones.filter(function(e){return e.id===t.timeZone});e.length&&(s=1e3*(60*-e[0].offset))}const o=i+s;m=new Date(o+60000*e)}}return m}toTimeZone(e){const t=this;let a=e;if((null===a||void 0===a)&&(a="Local"),t.timeZone===a)return t.clone();const i=t.timeZones.filter(function(e){return e.id===a});if(0===i.length)return t.clone();const s=this.toDate(a),o=new Smart.Utilities.DateTime(s);return o.timeZone=a,o.timeZoneOffset=i[0].offset,o.timeZoneOffsetHours=i[0].offsetHours,t.copySmallTimePartValues(o),o}day(){const e=this;return e.getDatePart(e.datePartDay)}month(){const e=this;return e.getDatePart(e.datePartMonth)}year(){const e=this;return e.getDatePart(e.datePartYear)}millisecond(){return parseInt(this.internalMS()%1e3)}hour(){const e=this;return parseInt(Math.floor(e.internalMS()/e.millisPerHour)%24)}minute(){const e=this;return parseInt(e.internalMS()/e.millisPerMinute%60)}second(){const e=this;return parseInt(e.internalMS()/e.millisPerSecond%60)}microsecond(){return this._microsecond}nanosecond(){return this._nanosecond}picosecond(){return this._picosecond}femtosecond(){return this._femtosecond}attosecond(){return this._attosecond}zeptosecond(){return this._zeptosecond}yoctosecond(){return this._yoctosecond}valueOf(){return this.dateData}equals(e){const t=this;return t.dateData===e.dateData&&t._microsecond===e._microsecond&&t._nanosecond===e._nanosecond&&t._picosecond===e._picosecond&&t._femtosecond===e._femtosecond&&t._attosecond===e._attosecond&&t._zeptosecond===e._zeptosecond&&t._yoctosecond===e._yoctosecond}equalDateParts(e){const t=this;return!(t.year()!==e.year()||t.month()!==e.month()||t.day()!==e.day())}compare(e){const t=this;if(t.equals(e))return 0;const a=["dateData","_microsecond","_nanosecond","_picosecond","_femtosecond","_attosecond","_zeptosecond","_yoctosecond"];for(let s=0;s<a.length;s++){const i=a[s];if(t[i]>e[i])return 1;if(t[i]<e[i])return-1}return 0}toDateString(){return this.toDate().toDateString()}toLocaleDateString(){const e=this;return e.toDate().toLocaleDateString(e.calendar.locale)}toLocaleString(){const e=this;return e.toDate().toLocaleString(e.calendar.locale)}toLocaleTimeString(){const e=this;return e.toDate().toLocaleTimeString(e.calendar.locale)}validateTimeZone(e){const t=this;if("string"==typeof e){const a=t.timeZones.filter(function(t){return t.id===e});0===a.length||(t.timeZone=e,t.timeZoneOffset=a[0].offset,t.timeZoneOffsetHours=a[0].offsetHours)}}copyTimeZone(e){const t=this;e.timeZone=t.timeZone,e.timeZoneOffset=t.timeZoneOffset,e.timeZoneOffsetHours=t.timeZoneOffsetHours}getTimeStamp(){const e=this,t=new Smart.Utilities.BigNumber(e.dateData.toString()+e.getFirstNDigitsOfPrecision(void 0,!0));return t}});