
/* Smart HTML Elements v1.1.0 (2018-June) 
Copyright (c) 2011-2018 jQWidgets. 
License: https://htmlelements.com/license/ */

Smart("smart-multiline-text-box",class extends Smart.TextBox{static get properties(){return{allowHorizontalScrollbar:{value:!1,type:"boolean"},allowVerticalScrollbar:{value:!1,type:"boolean"},autoCapitalize:{value:"none",allowedValues:["none","words","characters"],type:"string"},autoComplete:{value:"off",allowedValues:["on","off"],type:"string"},autoExpand:{value:!1,type:"boolean"},cols:{value:20,type:"number?"},enterKeyBehavior:{value:"newLine",allowedValues:["submit","clearOnSubmit","newLine"],type:"string"},resizable:{value:!1,type:"boolean"},rows:{value:5,type:"number?"},selectionDirection:{value:"none",allowedValues:["forward","backward","none"],type:"string"},selectionEnd:{value:0,reflectToAttribute:!1,type:"number"},selectionStart:{value:0,reflectToAttribute:!1,type:"number"},spellCheck:{value:!1,type:"boolean"},wrap:{value:"soft",allowedValues:["hard","soft","off"],type:"string"}}}static get listeners(){return{"document.down":"_documentDownHandler","document.mousemove":"_documentSelectionOutsideHandler","container.resize":"_handleScrollbarsDisplay","document.move":"_resizeMoveHandler","document.up":"_upHandler",focus:"_focusHandler","horizontalScrollBar.change":"_horizontalScrollbarHandler",keydown:"_keyDownHandler",mouseenter:"_mouseEventsHandler",mouseleave:"_mouseEventsHandler",resize:"_handleScrollbarsDisplay","resizeElement.down":"_resizeDownHandler",styleChanged:"_handleScrollbarsDisplay","input.change":"_textBoxChangeHandler","input.focus":"_focusHandler","input.blur":"_blurHandler","input.keydown":"_textBoxKeyDownHandler","input.keyup":"_keyUpHandler","input.paste":"_textBoxChangeHandler","input.select":"_textBoxSelectHandler",wheel:"_mouseWheelHandler","verticalScrollBar.change":"_verticalScrollbarHandler"}}static get requires(){return{"Smart.ScrollBar":"smart.scrollbar.js"}}template(){return`<div id="container">
                    <span id="label" inner-h-t-m-l="[[label]]" class ="smart-label"></span>
                    <div id="innerContainer" class="smart-inner-container">
                            <textarea id="input"
                                autocapitalize="[[autoCapitalize]]"
                                autocomplete="off"
                                cols="[[cols]]"
                                disabled="[[disabled]]"
                                inner-h-t-m-l="[[value]]"
                                maxlength="[[maxLength]]"
                                minlength="[[minLength]]"
                                name="[[name]]"
                                placeholder="[[placeholder]]"
                                readonly="[[readonly]]"
                                required="[[required]]"
                                rows="[[rows]]"
                                spellcheck="[[spellCheck]]"
                                wrap="[[wrap]]"></textarea>
                            <smart-scroll-bar id="verticalScrollBar" disabled="[[disabled]]" orientation="vertical" class ="bottom-right-visible"></smart-scroll-bar>
                            <smart-scroll-bar id="horizontalScrollBar" disabled="[[disabled]]" class ="bottom-right-visible"></smart-scroll-bar>
                            <div id="resizeElement" class ="smart-resize-element"></div>
                    </div>
                            <textarea id="textBoxHidden"
                                class ="smart-text-box-hidden"
                                autocapitalize="[[autoCapitalize]]"
                                autocomplete="off"
                                cols="[[cols]]"
                                disabled="[[disabled]]"
                                inner-h-t-m-l="[[value]]"
                                maxlength="[[maxLength]]"
                                minlength="[[minLength]]"
                                name="[[name]]"
                                placeholder="[[placeholder]]"
                                readonly="[[readonly]]"
                                required="[[required]]"
                                rows="[[rows]]"
                                spellcheck="[[spellCheck]]"
                                wrap="[[wrap]]"></textarea>
                    <span id="hint" class ="smart-hint"></span>
                </div>`}propertyChangedHandler(a,b,c){const d=this;switch(a){case"displayMode":d.$.input.value="escaped"===c?d._toEscapedDisplayMode(d.value):d.value=d._toDefaultDisplayMode(d.$.input.value);d._autoExpandUpdate(),d._handleScrollbarsDisplay();break;case"value":switch(d._preventProgramaticValueChange?(d._userValue="escaped"===d.displayMode?d._toDefaultDisplayMode(d.$.input.value):d.$.input.value,d._programmaticValue=c):d._userValue=d._programmaticValue=c,d.displayMode){case"escaped":d.$.input.value=d._toEscapedDisplayMode(d._userValue);break;default:d.$.input.value=d._userValue;}d._autoExpandUpdate(),d._handleScrollbarsDisplay();break;case"allowHorizontalScrollbar":case"allowVerticalScrollbar":case"singleLine":case"wrap":case"resizable":case"placeholder":d._autoExpandUpdate(),d._handleScrollbarsDisplay();break;case"selectionEnd":case"selectionStart":d._handleSelectedText();break;case"rows":case"cols":d._updateSizeRowsCols();break;case"disabled":d._setFocusable();break;case"readonly":break;default:super.propertyChangedHandler(a,b,c);}}selection(a){const b=this;let c=b.$.input.selectionStart,d=b.$.input.selectionEnd,e=b.value;return"escaped"===b.displayMode?(e=b.$.input.value.substring(c,d),"escaped"===a?e:b._toDefaultDisplayMode(e)):"escaped"===a?(e=e.substring(c,d),b._toEscapedDisplayMode(e)):(e=e.substring(c,d),e)}select(a,b){const c=this,d=Array.from(arguments).slice(0,2);let e,f;for(let c in d)d[c]=parseInt(d[c])||0;return(2===d.length?(e=Math.min([a,b]),f=Math.max([a,b])):e=d[0],2===d.length)?(e=parseInt(e),e=0<e?e<c.$.input.length?c.$.input.length:e:0,f<e?f=e:f>c.$.input.length&&(e=0),c.$.input.focus(),void c.$.input.setSelectionRange(e,f)):1===d.length?(c.$.input.focus(),void c.$.input.setSelectionRange(e,e+1)):void c.$.input.select()}_autoExpandUpdate(){const a=this;a.autoExpand&&(a.$.textBoxHidden.value=a.$.input.value,a.$.textBoxHidden.style.cssText="height:0px",a.$.input.style.cssText="height:"+a.$.textBoxHidden.scrollHeight+"px")}_blurHandler(){const a=this;a.removeAttribute("focused"),a._preventProgramaticValueChange=!1,a.value=a._userValue}_createElement(){const a=this;a.autoFocus&&a.$.input.focus();const b=getComputedStyle(a);"hidden"!==b.overflow&&(a.allowHorizontalScrollbar=!0,a.allowVerticalScrollbar=!0),"hidden"!==b.overflowX&&(a.allowHorizontalScrollbar=!0),"hidden"!==b.overflowY&&(a.allowVerticalScrollbar=!0),a.classList.add("smart-element-ready"),a._setFocusable(),a._syncTextBoxContentOnInitialization(),a._scrollView=new Smart.Utilities.Scroll(a.$.input,a.$.horizontalScrollBar,a.$.verticalScrollBar),a._autoExpandUpdate(),a._handleScrollbarsDisplay(),a._initializationValue=a.value,0<a.value.length?a.$.addClass("has-value"):a.$.removeClass("has-value"),a._handleHintContainer()}_handleScrollbarsDisplay(){const a=this,b=a.$.input;setTimeout(function(){a.allowHorizontalScrollbar&&b.scrollWidth>b.clientWidth?(a.$container.addClass("hscroll"),a._scrollView.scrollWidth=b.scrollWidth-b.clientWidth):a.$container.removeClass("hscroll"),a.allowVerticalScrollbar&&b.scrollHeight>b.clientHeight?(a.$container.addClass("vscroll"),a._scrollView.scrollHeight=b.scrollHeight-b.clientHeight):a.$container.removeClass("vscroll")},0)}_focusHandler(){const a=this;a.disabled||(a.setAttribute("focused",""),a.selectAllOnFocus&&a.$.input.select())}_horizontalScrollbarHandler(a){const b=this;b.disabled||!b.allowHorizontalScrollbar||(a.stopPropagation(),b.$.input.scrollLeft=a.detail.value)}_keyDownHandler(a){function b(b){let d=c.$.input.selectionStart,e=c.$.input.selectionEnd,f=c.$.input.value;a.preventDefault(),c.$.input.value=f.substring(0,d)+b+f.substring(e,f.length),c.value=c._toDefaultDisplayMode(c.$.input.value),c.$.input.selectionStart=d+2,c.$.input.selectionEnd=d+2}const c=this,d=a.key,e=a.shiftKey,f=a.ctrlKey,g=c.$.input.value;switch(c.allowVerticalScrollbar&&c.$.input.selectionEnd>c.$.input.value.length-5&&c._scrollView.scrollTo(c._scrollView.scrollTop+(0>a.deltaY?-c.offsetHeight:c.offsetHeight)),d){case"PageUp":{c._scrollView.scrollTop=0,c.$.input.scrollTop=0,c.$.input.selectionStart=c.$.input.selectionEnd=0;break}case"PageDown":{c._scrollView.scrollTop=c._scrollView.scrollHeight,c.$.input.scrollTop=c._scrollView.scrollHeight,c.$.input.selectionStart=c.$.input.selectionEnd=c.$.input.value.length;break}case"Enter":{"submit"!==c.enterKeyBehavior&&"clearOnSubmit"!==c.enterKeyBehavior||e||f?"escaped"===c.displayMode?b("\\n"):f&&(c.$.input.value+="\n"):(a.preventDefault(),c._userValue="escaped"===c.displayMode?c._toDefaultDisplayMode(c.$.input.value):c.$.input.value,c.value=c._userValue,""!==g&&(c.$.fireEvent("change",{value:g,type:"submit"}),"clearOnSubmit"===c.enterKeyBehavior&&(c.$.input.value="")),c._submitted=!0);break}case" ":{"escaped"===c.displayMode&&b("\\s");break}case"Backspace":{if("escaped"===c.displayMode&&c.$.input.selectionStart===c.$.input.selectionEnd){let a=c.$.input.selectionStart;"\\"===g[a-2]&&("s"===g[a-1]||"n"===g[a-1])&&(c.$.input.value=c.$.input.value.substring(0,a-2)+c.$.input.value.substring(a-2,c.$.input.value.length),c.$.input.selectionStart=a-2)}c._scrollView&&c._handleScrollbarsDisplay();break}}}_keyUpHandler(a){const b=this,c=a.key;"ArrowLeft"===c||"ArrowUp"===c||"ArrowDown"===c?b._handlePointerInEscapedSymbol():"ArrowRight"===c?b._handlePointerInEscapedSymbol("next"):void 0;b._autoExpandUpdate(),b._userValue="escaped"===b.displayMode?b._toDefaultDisplayMode(b.$.input.value):b.$.input.value,b._submitKeyUpHandler()}_textBoxKeyDownHandler(a){const b=this,c=a.key;b._scrollView&&b._handleScrollbarsDisplay(),b._autoExpandUpdate(),b.value&&0<b.value.length?b.$.addClass("has-value"):b.$.removeClass("has-value"),-1===["Enter","Escape"].indexOf(c)&&(b._preventProgramaticValueChange=!0)}_mouseWheelHandler(a){const b=this;b.disabled||(b.allowVerticalScrollbar&&b._scrollView.scrollTo(b._scrollView.scrollTop+(0>a.deltaY?-b.offsetHeight:b.offsetHeight)),b.$.input.scrollTop+=0>a.deltaY?-b.offsetHeight:b.offsetHeight,a.preventDefault())}_syncTextBoxContentOnInitialization(){const a=this;let b;return b=""===a.value?a.innerHTML:a.value,"escaped"===a.displayMode?void(b.match(/\r\n|\n\r|\n|\r|\s|\t|\f|\r/g)?(a.value=a._initializationValue=b,a.$.input.value=a._toEscapedDisplayMode(b)):(a.value=a._initializationValue=a._toDefaultDisplayMode(b),a.$.input.value=b)):void(a.$.input.value=a.value=a._initializationValue=b)}_textBoxChangeHandler(a){const b=this,c=a.clipboardData||a.originalEvent&&a.originalEvent.clipboardData||window.clipboardData,d=b.value;if("escaped"===b.displayMode){const d=b.$.input.selectionStart,e=b.$.input.selectionEnd;if(c){let f=c.getData("text"),g=b.$.input.value;a.preventDefault(),f=b._toEscapedDisplayMode(f),b.$.input.value=g.substring(0,d)+f+g.substring(e,g.length)}b.value=b._toDefaultDisplayMode(b.$.input.value)}else b.value=b.$.input.value;b._handleScrollbarsDisplay(),0<b.value.length?b.$.addClass("has-value"):b.$.removeClass("has-value"),c||b.$.fireEvent("change",{value:b.value,oldValue:d,type:"blur"}),b._handleHintContainer()}_resizeDownHandler(){const a=this;a.disabled||!a.resizable||(a._resizeStarted=!0,a.$container.addClass("smart-resize"),!a.readonly&&a.$.input.setAttribute("readonly",""))}_resizeMoveHandler(a){const b=this;if(!b.disabled&&b.resizable&&b._resizeStarted){const c=b.getBoundingClientRect(),d={width:50,height:50},e=a.clientX-c.left,f=a.clientY-c.top;e>d.width&&(b.style.width=e+"px"),f>d.height&&(b.style.height=f+"px")}}_updateSizeRowsCols(){const a=this;a.$.container.removeAttribute("style"),setTimeout(function(){if(a.allowHorizontalScrollbar||a.allowVerticalScrollbar){const b=a.getBoundingClientRect();a.$.container.style.width=b.width+"px",a.$.container.style.height=b.height+"px"}},0)}_upHandler(a){const b=this;return b._selectionStarted=!1,b.disabled?void 0:a.originalEvent.target===b.$.input?void b._handlePointerInEscapedSymbol():void(b.$container.removeClass("smart-resize"),!b.readonly&&b.$.input.removeAttribute("readonly"),b._resizeStarted&&b.$.input.focus(),b._resizeStarted=!1)}_verticalScrollbarHandler(a){const b=this;b.disabled||!b.allowVerticalScrollbar||(a.stopPropagation(),b.$.input.scrollTop=a.detail.value)}_documentDownHandler(a){const b=this;if(b._selectionStarted=!1,!a.originalEvent||!a.originalEvent.target.closest("smart-multiline-text-box"))return;const c=document.elementsFromPoint(a.pageX,a.pageY);let d=null;for(let b=0;b<c.length;b++)if(c[b]instanceof Smart.MultilineTextBox){d=c[b];break}d===b&&(b._selectionStarted=!0,b._selectionStartTime=new Date,b._pointerDown={pageX:a.pageX,pageY:a.pageY})}_documentSelectionOutsideHandler(a){function b(b){const c=d.getBoundingClientRect(),e=b?c.left-a.pageX:c.top-a.pageY,f=b?"Left":"Top";0<e?(d.$.input["scroll"+f]-=10,d._scrollView["scroll"+f]-=10):(d.$.input["scroll"+f]+=10,d._scrollView["scroll"+f]+=10)}var c=Math.abs;const d=this;if(clearInterval(d._outsideAutoScroll),!d._selectionStarted)return;const e=300>new Date-d._selectionStartTime,f=!e&&(3<=c(d._pointerDown.pageX-a.pageX)||3<=c(d._pointerDown.pageY-a.pageY));f&&(d._outsideAutoScroll=setInterval(function(){b(),b(!0)},10))}_selectStartHandler(){}_styleChangedHandler(){}});